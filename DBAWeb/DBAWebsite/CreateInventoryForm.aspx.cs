using DBAWebsite.APP;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace DBAWebsite
{
    public partial class CreateInventory : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

            if (Application["Name"] != null)
            {
                lblhead_servername.Text = Application["Name"].ToString();
                lbl_servername.Text = Application["Name"].ToString();
            }
            //if (Application["FullName"] == null)
            //else 
            //{
            //    lblhead_servername.Text = Application["Name"].ToString();
            //    lbl_servername.Text = Application["Name"].ToString();
            //}

            Inventory_Number_autovalue.Text = "Autogenerated";

            backup_type_dropdownlist_DataBinding();            
            Business_contact_dropdownlist_DataBinding();
            location_id_dropdownlist_DataBinding();
            application_info_dropdownlist_DataBinding();
            ITcontact_person_dropdownlist_DataBinding();
            ITcontact_team_dropdownlist_DataBinding();
            Location_dropdownlist_DataBinding();
            Inventory_dropdownlist_DataBinding();
            Environment_dropdownlist_DataBinding();
            sox_complaint_dropdownlist_DataBinding();                                                                                                    
        }       

        protected void Inventory_dropdownlist_DataBinding()
        {
            DataTable inventoryType = new DataTable();            

            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "inventorytype";
                    conn.Open();
                    reader = cmd.ExecuteReader();                    
                    inventoryType.Load(reader);
                    Inventory_dropdownlist.DataSource = inventoryType;
                    Inventory_dropdownlist.DataTextField = "InventoryType";
                    Inventory_dropdownlist.DataValueField = "InventoryType";
                    Inventory_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }
        }

        protected void Location_dropdownlist_DataBinding()
        {
            DataTable location_info = new DataTable();            
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "location";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    location_info.Load(reader);
                    Location_dropdownlist.DataSource = location_info;
                    Location_dropdownlist.DataTextField = "Site Name";
                    Location_dropdownlist.DataValueField = "Site Name";
                    Location_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }


        }

        protected void Environment_dropdownlist_DataBinding()
        {
            DataTable environmentType = new DataTable();                     
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "environment";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    environmentType.Load(reader);
                    Environment_dropdownlist.DataSource = environmentType;
                    Environment_dropdownlist.DataTextField = "Environment";
                    Environment_dropdownlist.DataValueField = "Environment";
                    Environment_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }
        }

        protected void ITcontact_team_dropdownlist_DataBinding()
        {
            DataTable contact_team = new DataTable();
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "itcontactteam";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    contact_team.Load(reader);
                    ITcontact_team_dropdownlist.DataSource = contact_team;
                    ITcontact_team_dropdownlist.DataTextField = "IT Contact Team";
                    ITcontact_team_dropdownlist.DataValueField = "IT Contact Team";
                    ITcontact_team_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }

        }

        protected void ITcontact_person_dropdownlist_DataBinding()
        {
            DataTable contact_person = new DataTable();       
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "itcontactperson";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    contact_person.Load(reader);
                    ITcontact_person_dropdownlist.DataSource = contact_person;
                    ITcontact_person_dropdownlist.DataTextField = "displayName";
                    ITcontact_person_dropdownlist.DataValueField = "displayName";
                    ITcontact_person_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }

            
        }

        protected void sox_complaint_dropdownlist_DataBinding()
        {
            DataTable inventory_soxComplaint_info = new DataTable();
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "soxcompliant";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    inventory_soxComplaint_info.Load(reader);
                    sox_complaint_dropdownlist.DataSource = inventory_soxComplaint_info;
                    sox_complaint_dropdownlist.DataTextField = "Inventory_SoxComplaint";
                    sox_complaint_dropdownlist.DataValueField = "Inventory_SoxComplaint";
                    sox_complaint_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }

        }

        protected void backup_type_dropdownlist_DataBinding()
        {
            DataTable backupType = new DataTable();           
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "backuptype";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    backupType.Load(reader);
                    backup_type_dropdownlist.DataSource = backupType;
                    backup_type_dropdownlist.DataTextField = "BackupType";
                    backup_type_dropdownlist.DataValueField = "BackupType";
                    backup_type_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }

        }

        protected void Business_contact_dropdownlist_DataBinding()
        {
            DataTable businessContact = new DataTable();            
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "buscontact";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    businessContact.Load(reader);
                    Business_contact_dropdownlist.DataSource = businessContact;
                    Business_contact_dropdownlist.DataTextField = "Business Contact";
                    Business_contact_dropdownlist.DataValueField = "Business Contact";
                    Business_contact_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }
        }

        protected void location_id_dropdownlist_DataBinding()
        {
            DataTable location_ID = new DataTable();            
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "locationid";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    location_ID.Load(reader);
                    location_id_dropdownlist.DataSource = location_ID;
                    location_id_dropdownlist.DataTextField = "Location ID";
                    location_id_dropdownlist.DataValueField = "Location ID";
                    location_id_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }

        }

        protected void application_info_dropdownlist_DataBinding()
        {
            DataTable application_Info = new DataTable();           
            SqlDataReader reader;
            using (SqlConnection conn = new SqlConnection(ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString))
            using (SqlCommand cmd = new SqlCommand("usp_WebFormSelect", conn))
            {
                try
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.Add("@query", SqlDbType.VarChar).Value = "appinfo";
                    conn.Open();
                    reader = cmd.ExecuteReader();
                    application_Info.Load(reader);
                    application_info_dropdownlist.DataSource = application_Info;
                    application_info_dropdownlist.DataTextField = "Application Info";
                    application_info_dropdownlist.DataValueField = "Application Info";
                    application_info_dropdownlist.DataBind();
                    Logging.LogInfo("Successful binding on: Inventory Dropdown", true);
                }
                catch (Exception ex)
                {
                    Logging.LogException(ex, "Error while executing the SP: usp_WebFormSelect");
                }
            }

        }

        protected void submit_Click(object sender, EventArgs e)
        {
            string serverName = lblhead_servername.Text;

            string inventory_type = Inventory_dropdownlist.SelectedItem.Text;
            string inventorytype_notes = Request.Form["inv_inventorytype_notes"];

            string helpdesk_id = txt_helpdeskid.Text;
            string helpdeskid_notes = Request.Form["inv_helpdeskid_notes"];

            string project_id = txt_projectid.Text;
            string projectid_notes = Request.Form["inv_projectid_notes"];

            string location = Location_dropdownlist.SelectedItem.Text;
            string location_notes = Request.Form["inv_location_notes"];

            string location_id = location_id_dropdownlist.SelectedItem.Text;
            string locationid_notes = Request.Form["inv_locationid_notes"];

            string environment = Environment_dropdownlist.SelectedItem.Text;
            string environment_notes = Request.Form["inv_environment_notes"];

            string application_info = application_info_dropdownlist.SelectedItem.Text;
            string applicationinfo_notes = Request.Form["inv_applicationinfo_notes"];

            string ITcontact_team = ITcontact_team_dropdownlist.SelectedItem.Text;
            string ITcontactteam_notes = Request.Form["inv_itcontactteam_notes"];

            string ITcontact_person = ITcontact_person_dropdownlist.SelectedItem.Text;
            string ITcontactperson_notes = Request.Form["inv_itcontactperson_notes"];

            string business_contact = Business_contact_dropdownlist.SelectedItem.Text;
            string businesscontact_notes = Request.Form["inv_businesscontact_notes"];

            string sox_complaint = sox_complaint_dropdownlist.SelectedItem.Text;
            string soxcomplaint_notes = Request.Form["inv_soxcomplaint_notes"];

            string backup_type = backup_type_dropdownlist.SelectedItem.Text;
            string backuptype_notes = Request.Form["inv_backuptype_notes"];

            string overallinventory_notes = Request.Form["inv_overall_notes"];

            string connString = ConfigurationManager.ConnectionStrings["myConnectionString"].ConnectionString;
            SqlConnection conn = null;
            try
            {
                conn = new SqlConnection(connString);
                conn.Open();

                using (SqlCommand cmd = new SqlCommand())
                {
                    cmd.Connection = conn;
                    cmd.CommandType = CommandType.Text;
                    cmd.CommandText = "INSERT INTO InventoryForm ([ServerName],[InventoryType],[InventoryType_Notes],[HelpDeskID],[HelpDeskID_Notes],[ProjectID],[ProjectID_Notes],[Location],[Location_Notes],[LocationID],[LocationID_Notes],[Environment],[Environment_Notes],[ApplicationInfo],[ApplicationInfo_Notes],[ITContactTeam],[ITContactTeam_Notes],[ITContactPerson],[ITContactPerson_Notes],[BusinessContact],[BusinessContact_Notes],[SOXComplaint],[SOXComplaint_Notes],[BackupType],[BackupType_Notes],[OverallInventorynotes]) Values (@serevrname,@inventorytype,@inventorytypenotes,@helpdeskid,@helpdeskidnotes,@projectid,@projectidnotes,@location,@locationnotes,@locationid,@locationidnotes,@environment,@environmentnotes,@applicationinfo,@applicationinfonotes,@itcontactteam,@itcontactteamnotes,@itcontactperson,@itcontactpersonnotes,@businesscontact,@businesscontactnotes,@soxcomplaint,@soxcomplaintnotes,@backuptype,@backuptypenotes,@overallinventorynotes)";

                    SqlParameter[] param = new SqlParameter[29];

                    param[3] = new SqlParameter("@serevrname", SqlDbType.NVarChar, 50);
                    param[4] = new SqlParameter("@inventorytype", SqlDbType.NVarChar, 50);
                    param[5] = new SqlParameter("@inventorytypenotes", SqlDbType.NVarChar, 100);
                    param[6] = new SqlParameter("@helpdeskid", SqlDbType.NVarChar, 50);
                    param[7] = new SqlParameter("@helpdeskidnotes", SqlDbType.NVarChar, 100);
                    param[8] = new SqlParameter("@projectid", SqlDbType.NVarChar, 50);
                    param[9] = new SqlParameter("@projectidnotes", SqlDbType.NVarChar, 100);
                    param[10] = new SqlParameter("@location", SqlDbType.NVarChar, 50);
                    param[11] = new SqlParameter("@locationnotes", SqlDbType.NVarChar, 100);
                    param[12] = new SqlParameter("@locationid", SqlDbType.NVarChar, 50);
                    param[13] = new SqlParameter("@locationidnotes", SqlDbType.NVarChar, 100);
                    param[14] = new SqlParameter("@environment", SqlDbType.NVarChar, 50);
                    param[15] = new SqlParameter("@environmentnotes", SqlDbType.NVarChar, 100);
                    param[16] = new SqlParameter("@applicationinfo", SqlDbType.NVarChar, 50);
                    param[17] = new SqlParameter("@applicationinfonotes", SqlDbType.NVarChar, 100);
                    param[18] = new SqlParameter("@itcontactteam", SqlDbType.NVarChar, 50);
                    param[19] = new SqlParameter("@itcontactteamnotes", SqlDbType.NVarChar, 100);
                    param[20] = new SqlParameter("@itcontactperson", SqlDbType.NVarChar, 50);
                    param[21] = new SqlParameter("@itcontactpersonnotes", SqlDbType.NVarChar, 100);
                    param[22] = new SqlParameter("@businesscontact", SqlDbType.NVarChar, 50);
                    param[23] = new SqlParameter("@businesscontactnotes", SqlDbType.NVarChar, 100);
                    param[24] = new SqlParameter("@soxcomplaint", SqlDbType.NVarChar, 50);
                    param[25] = new SqlParameter("@soxcomplaintnotes", SqlDbType.NVarChar, 100);
                    param[26] = new SqlParameter("@backuptype", SqlDbType.NVarChar, 50);
                    param[27] = new SqlParameter("@backuptypenotes", SqlDbType.NVarChar, 100);
                    param[28] = new SqlParameter("@overallinventorynotes", SqlDbType.NVarChar, 100);


                    param[3].Value = serverName;
                    param[4].Value = inventory_type;
                    param[5].Value = inventorytype_notes;
                    param[6].Value = helpdesk_id;
                    param[7].Value = helpdeskid_notes;
                    param[8].Value = project_id;
                    param[9].Value = projectid_notes;
                    param[10].Value = location;
                    param[11].Value = location_notes;
                    param[12].Value = location_id;
                    param[13].Value = locationid_notes;
                    param[14].Value = environment;
                    param[15].Value = environment_notes;
                    param[16].Value = application_info;
                    param[17].Value = applicationinfo_notes;
                    param[18].Value = ITcontact_team;
                    param[19].Value = ITcontactteam_notes;
                    param[20].Value = ITcontact_person;
                    param[21].Value = ITcontactperson_notes;
                    param[22].Value = business_contact;
                    param[23].Value = businesscontact_notes;
                    param[24].Value = sox_complaint;
                    param[25].Value = soxcomplaint_notes;
                    param[26].Value = backup_type;
                    param[27].Value = backuptype_notes;
                    param[28].Value = overallinventory_notes;


                    for (int i = 3; i < param.Length; i++)
                    {
                        cmd.Parameters.Add(param[i]);
                    }


                    int rowsAffected = cmd.ExecuteNonQuery();
                    string url = ResolveUrl("~/CreateInventoryForm.aspx");
                    if (rowsAffected == 1)
                        Response.Write(String.Format("<script>alert('The records are inserted in to database successfully!');window.location='{0}';</script>", url));
                    else
                        Response.Write(String.Format("<script>alert('OOps there was an error while inserting in to database!');window.location='{0}';</script>", url));
                }
            }
            catch (Exception ex)
            {
                Logging.LogException(ex, "Error while inserting into database -- inventoryform");
                string url = ResolveUrl("~/CreateInventoryForm.aspx");
                Response.Write(String.Format("<script>alert('OOps there was an error while inserting in to database!');window.location='{0}';</script>", url));
            }
            finally
            {
                if (conn != null)
                {
                    conn.Close();
                }
            }
        }
    }
}